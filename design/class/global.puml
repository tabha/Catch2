@startuml "Class Diagram"
package Catch{

'###################### START INTERFACES #########################################
package Catch.Detail {
    ' NonCopyable=NcpB
    class NonCopyable  {
        NcpB( NcpB const& ) = delete
        NcpB( NcpB&& ) = delete
        operator=(NcpB const& ) = delete
        operator=(NcpB&& ) = delete

        -NcpB() noexcept = default
    }
}

interface IRegistryHub{
    + getReporterRegistry()
    + getTestCaseRegistry()
    + getTagAliasRegistry()
    + getExceptionTranslatorRegistry()
}

interface IMutableRegistryHub{
    + registerReporter
    + registerListener
    + registerTest
    + registerTranslator
    + registerTagAlias
}
interface IConfig{

}

'###################### END INTERFACE #########################################


'###################### START CLASS #########################################
package Catch.Clara{

    class Parser{

    }
}


' Session=Sn
class Session {
    Sn()
    ~Sn()
    - m_cli
    - m_configData 
    - m_config 
    - m_startupException : bool
    void showHelp()
    void libIdentify()
    int applyCommandLine()
    void useConfigData()
    int run()
    - int runInternal()
}

class RegistryHub {
    - m_testCaseRegistry
    - m_reporterRegistry
    - m_exceptionTranslatorRegistry
    - m_tagAliasRegistry
    - m_exceptionRegistry
    - m_enumValuesRegistry
} 

' Config
class Config {

}

class Singleton
'###################### END CLASS #########################################






'###################### START STRUCT #########################################
' ConfigData=CnfD
struct ConfigData {
    + listTest : bool
    + listTags : bool
    + listReporters : bool
    .
    .
    .
}
'###################### END STRUCT #########################################


}

' Session is non copyable
Catch.Session -u--|> Catch.Detail.NonCopyable 
Catch.Session::m_configData -l-*  Catch.ConfigData
Catch.Session::m_cli -u--*  Catch.Clara.Parser
Catch.Session::m_config -l-o  Catch.Config
Catch.Config --|> Catch.IConfig

' Registry Hub

class Catch.RegistryHub implements Catch.IRegistryHub
class Catch.RegistryHub implements Catch.IMutableRegistryHub

Catch.Singleton -> Catch.RegistryHub 
Catch.Session --> Catch.Singleton: <<use>>
@enduml